sudo: required

services:
  - docker

env:
  global:
    - BUILD=${TRAVIS_BUILD_NUMBER}
    - CACHE_DIR=$HOME/.cache/docker
  matrix:
    - TYPE=deb
      PLATFORM=ubuntu
      DISTRO_VERSION=trusty
    - TYPE=deb
      PLATFORM=ubuntu
      DISTRO_VERSION=xenial
    - TYPE=deb
      PLATFORM=ubuntu
      DISTRO_VERSION=zesty
    - TYPE=rpm
      PLATFORM=fedora
      DISTRO_VERSION=24
    - TYPE=rpm
      PLATFORM=fedora
      DISTRO_VERSION=25
    - TYPE=rpm
      PLATFORM=fedora
      DISTRO_VERSION=26

cache:
  directories:
    - $CACHE_DIR

before_install:
  # We need to upgrade docker so that we can use ARG before FROM:
  - sudo sh -c 'echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list'
  - sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  - sudo apt-get update
  - sudo apt-key update
  - sudo apt-get -qqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install docker-engine=17.05.0~ce-0~ubuntu-trusty
  - docker -v
  - mkdir -p ${CACHE_DIR}
  - if [ -f ${CACHE_DIR}/${PLATFORM}-${DISTRO_VERSION}.tar.gz ]; then gunzip -c ${CACHE_DIR}/${PLATFORM}-${DISTRO_VERSION}.tar.gz | docker load; fi

install:
  - docker build -f build-${PLATFORM}.dockerfile --build-arg DISTRO_VERSION=${DISTRO_VERSION} -t ${PLATFORM}-${DISTRO_VERSION} .
  - set -o pipefail && docker save $(docker history -q ${PLATFORM}-${DISTRO_VERSION} | grep -v '<missing>') | gzip > ${PLATFORM}-${DISTRO_VERSION}.tar.gz && mv ${PLATFORM}-${DISTRO_VERSION}.tar.gz ${CACHE_DIR}/

before_script:
  - docker run --name extract-${PLATFORM} -t -d ${PLATFORM}-${DISTRO_VERSION} /bin/bash
  - docker cp extract-${PLATFORM}:/usr/local/src/constellation/${PLATFORM}.${TYPE} ${PLATFORM}.${TYPE}
  - docker stop extract-${PLATFORM}
  - if [ -f ${CACHE_DIR}/test-${PLATFORM}-${DISTRO_VERSION}.tar.gz ]; then gunzip -c ${CACHE_DIR}/test-${PLATFORM}-${DISTRO_VERSION}.tar.gz | docker load; fi

script:
  - docker build -f test-${PLATFORM}.dockerfile --build-arg DISTRO_VERSION=${DISTRO_VERSION} -t test-${PLATFORM}-${DISTRO_VERSION} .
  - set -o pipefail && docker save $(docker history -q test-${PLATFORM}-${DISTRO_VERSION} | grep -v '<missing>') | gzip > test-${PLATFORM}-${DISTRO_VERSION}.tar.gz && mv test-${PLATFORM}-${DISTRO_VERSION}.tar.gz ${CACHE_DIR}/
